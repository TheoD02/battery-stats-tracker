/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as AuthLoginImport } from './routes/auth/login'

// Create Virtual Routes

const ArticlesIndexLazyImport = createFileRoute('/articles/')()
const ArticlesCreateLazyImport = createFileRoute('/articles/create')()
const ArticlesIdEditLazyImport = createFileRoute('/articles/$id/edit')()

// Create/Update Routes

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ArticlesIndexLazyRoute = ArticlesIndexLazyImport.update({
  path: '/articles/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/articles/index.lazy').then((d) => d.Route),
)

const ArticlesCreateLazyRoute = ArticlesCreateLazyImport.update({
  path: '/articles/create',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/articles/create.lazy').then((d) => d.Route),
)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const ArticlesIdEditLazyRoute = ArticlesIdEditLazyImport.update({
  path: '/articles/$id/edit',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/articles/$id/edit.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/articles/create': {
      id: '/articles/create'
      path: '/articles/create'
      fullPath: '/articles/create'
      preLoaderRoute: typeof ArticlesCreateLazyImport
      parentRoute: typeof rootRoute
    }
    '/articles/': {
      id: '/articles/'
      path: '/articles'
      fullPath: '/articles'
      preLoaderRoute: typeof ArticlesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/articles/$id/edit': {
      id: '/articles/$id/edit'
      path: '/articles/$id/edit'
      fullPath: '/articles/$id/edit'
      preLoaderRoute: typeof ArticlesIdEditLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AboutRoute,
  AuthLoginRoute,
  ArticlesCreateLazyRoute,
  ArticlesIndexLazyRoute,
  ArticlesIdEditLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/auth/login",
        "/articles/create",
        "/articles/",
        "/articles/$id/edit"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/articles/create": {
      "filePath": "articles/create.lazy.tsx"
    },
    "/articles/": {
      "filePath": "articles/index.lazy.tsx"
    },
    "/articles/$id/edit": {
      "filePath": "articles/$id/edit.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
